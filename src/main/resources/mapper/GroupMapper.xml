<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solraccept.solraccept.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="com.solraccept.solraccept.bean.solr.Group">
    <id column="groupId" jdbcType="BIGINT" property="groupid" />
    <result column="uuid_" jdbcType="VARCHAR" property="uuid" />
    <result column="companyId" jdbcType="BIGINT" property="companyid" />
    <result column="creatorUserId" jdbcType="BIGINT" property="creatoruserid" />
    <result column="classNameId" jdbcType="BIGINT" property="classnameid" />
    <result column="classPK" jdbcType="BIGINT" property="classpk" />
    <result column="parentGroupId" jdbcType="BIGINT" property="parentgroupid" />
    <result column="liveGroupId" jdbcType="BIGINT" property="livegroupid" />
    <result column="treePath" jdbcType="VARCHAR" property="treepath" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type_" jdbcType="INTEGER" property="type" />
    <result column="typeSettings" jdbcType="VARCHAR" property="typesettings" />
    <result column="manualMembership" jdbcType="TINYINT" property="manualmembership" />
    <result column="membershipRestriction" jdbcType="INTEGER" property="membershiprestriction" />
    <result column="friendlyURL" jdbcType="VARCHAR" property="friendlyurl" />
    <result column="site" jdbcType="TINYINT" property="site" />
    <result column="remoteStagingGroupCount" jdbcType="INTEGER" property="remotestaginggroupcount" />
    <result column="active_" jdbcType="TINYINT" property="active" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    groupId, uuid_, companyId, creatorUserId, classNameId, classPK, parentGroupId, liveGroupId, 
    treePath, name, description, type_, typeSettings, manualMembership, membershipRestriction, 
    friendlyURL, site, remoteStagingGroupCount, active_
  </sql>
  <select id="selectByExample" parameterType="com.solraccept.solraccept.bean.solr.GroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectparentGroupid" parameterType="java.lang.Long" resultType="java.lang.Long">
    select parentGroupId from group_ where groupId=#{groupid,jdbcType=BIGINT}

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_
    where groupId = #{groupid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from group_
    where groupId = #{groupid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.solraccept.solraccept.bean.solr.GroupExample">
    delete from group_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.solraccept.solraccept.bean.solr.Group">
    insert into group_ (groupId, uuid_, companyId, 
      creatorUserId, classNameId, classPK, 
      parentGroupId, liveGroupId, treePath, 
      name, description, type_, 
      typeSettings, manualMembership, membershipRestriction, 
      friendlyURL, site, remoteStagingGroupCount, 
      active_)
    values (#{groupid,jdbcType=BIGINT}, #{uuid,jdbcType=VARCHAR}, #{companyid,jdbcType=BIGINT}, 
      #{creatoruserid,jdbcType=BIGINT}, #{classnameid,jdbcType=BIGINT}, #{classpk,jdbcType=BIGINT}, 
      #{parentgroupid,jdbcType=BIGINT}, #{livegroupid,jdbcType=BIGINT}, #{treepath,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{typesettings,jdbcType=VARCHAR}, #{manualmembership,jdbcType=TINYINT}, #{membershiprestriction,jdbcType=INTEGER}, 
      #{friendlyurl,jdbcType=VARCHAR}, #{site,jdbcType=TINYINT}, #{remotestaginggroupcount,jdbcType=INTEGER}, 
      #{active,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.solraccept.solraccept.bean.solr.Group">
    insert into group_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        groupId,
      </if>
      <if test="uuid != null">
        uuid_,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="creatoruserid != null">
        creatorUserId,
      </if>
      <if test="classnameid != null">
        classNameId,
      </if>
      <if test="classpk != null">
        classPK,
      </if>
      <if test="parentgroupid != null">
        parentGroupId,
      </if>
      <if test="livegroupid != null">
        liveGroupId,
      </if>
      <if test="treepath != null">
        treePath,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type_,
      </if>
      <if test="typesettings != null">
        typeSettings,
      </if>
      <if test="manualmembership != null">
        manualMembership,
      </if>
      <if test="membershiprestriction != null">
        membershipRestriction,
      </if>
      <if test="friendlyurl != null">
        friendlyURL,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="remotestaginggroupcount != null">
        remoteStagingGroupCount,
      </if>
      <if test="active != null">
        active_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        #{groupid,jdbcType=BIGINT},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=BIGINT},
      </if>
      <if test="creatoruserid != null">
        #{creatoruserid,jdbcType=BIGINT},
      </if>
      <if test="classnameid != null">
        #{classnameid,jdbcType=BIGINT},
      </if>
      <if test="classpk != null">
        #{classpk,jdbcType=BIGINT},
      </if>
      <if test="parentgroupid != null">
        #{parentgroupid,jdbcType=BIGINT},
      </if>
      <if test="livegroupid != null">
        #{livegroupid,jdbcType=BIGINT},
      </if>
      <if test="treepath != null">
        #{treepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typesettings != null">
        #{typesettings,jdbcType=VARCHAR},
      </if>
      <if test="manualmembership != null">
        #{manualmembership,jdbcType=TINYINT},
      </if>
      <if test="membershiprestriction != null">
        #{membershiprestriction,jdbcType=INTEGER},
      </if>
      <if test="friendlyurl != null">
        #{friendlyurl,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=TINYINT},
      </if>
      <if test="remotestaginggroupcount != null">
        #{remotestaginggroupcount,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.solraccept.solraccept.bean.solr.GroupExample" resultType="java.lang.Long">
    select count(*) from group_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update group_
    <set>
      <if test="record.groupid != null">
        groupId = #{record.groupid,jdbcType=BIGINT},
      </if>
      <if test="record.uuid != null">
        uuid_ = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=BIGINT},
      </if>
      <if test="record.creatoruserid != null">
        creatorUserId = #{record.creatoruserid,jdbcType=BIGINT},
      </if>
      <if test="record.classnameid != null">
        classNameId = #{record.classnameid,jdbcType=BIGINT},
      </if>
      <if test="record.classpk != null">
        classPK = #{record.classpk,jdbcType=BIGINT},
      </if>
      <if test="record.parentgroupid != null">
        parentGroupId = #{record.parentgroupid,jdbcType=BIGINT},
      </if>
      <if test="record.livegroupid != null">
        liveGroupId = #{record.livegroupid,jdbcType=BIGINT},
      </if>
      <if test="record.treepath != null">
        treePath = #{record.treepath,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type_ = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.typesettings != null">
        typeSettings = #{record.typesettings,jdbcType=VARCHAR},
      </if>
      <if test="record.manualmembership != null">
        manualMembership = #{record.manualmembership,jdbcType=TINYINT},
      </if>
      <if test="record.membershiprestriction != null">
        membershipRestriction = #{record.membershiprestriction,jdbcType=INTEGER},
      </if>
      <if test="record.friendlyurl != null">
        friendlyURL = #{record.friendlyurl,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null">
        site = #{record.site,jdbcType=TINYINT},
      </if>
      <if test="record.remotestaginggroupcount != null">
        remoteStagingGroupCount = #{record.remotestaginggroupcount,jdbcType=INTEGER},
      </if>
      <if test="record.active != null">
        active_ = #{record.active,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update group_
    set groupId = #{record.groupid,jdbcType=BIGINT},
      uuid_ = #{record.uuid,jdbcType=VARCHAR},
      companyId = #{record.companyid,jdbcType=BIGINT},
      creatorUserId = #{record.creatoruserid,jdbcType=BIGINT},
      classNameId = #{record.classnameid,jdbcType=BIGINT},
      classPK = #{record.classpk,jdbcType=BIGINT},
      parentGroupId = #{record.parentgroupid,jdbcType=BIGINT},
      liveGroupId = #{record.livegroupid,jdbcType=BIGINT},
      treePath = #{record.treepath,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      type_ = #{record.type,jdbcType=INTEGER},
      typeSettings = #{record.typesettings,jdbcType=VARCHAR},
      manualMembership = #{record.manualmembership,jdbcType=TINYINT},
      membershipRestriction = #{record.membershiprestriction,jdbcType=INTEGER},
      friendlyURL = #{record.friendlyurl,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=TINYINT},
      remoteStagingGroupCount = #{record.remotestaginggroupcount,jdbcType=INTEGER},
      active_ = #{record.active,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.solraccept.solraccept.bean.solr.Group">
    update group_
    <set>
      <if test="uuid != null">
        uuid_ = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=BIGINT},
      </if>
      <if test="creatoruserid != null">
        creatorUserId = #{creatoruserid,jdbcType=BIGINT},
      </if>
      <if test="classnameid != null">
        classNameId = #{classnameid,jdbcType=BIGINT},
      </if>
      <if test="classpk != null">
        classPK = #{classpk,jdbcType=BIGINT},
      </if>
      <if test="parentgroupid != null">
        parentGroupId = #{parentgroupid,jdbcType=BIGINT},
      </if>
      <if test="livegroupid != null">
        liveGroupId = #{livegroupid,jdbcType=BIGINT},
      </if>
      <if test="treepath != null">
        treePath = #{treepath,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type_ = #{type,jdbcType=INTEGER},
      </if>
      <if test="typesettings != null">
        typeSettings = #{typesettings,jdbcType=VARCHAR},
      </if>
      <if test="manualmembership != null">
        manualMembership = #{manualmembership,jdbcType=TINYINT},
      </if>
      <if test="membershiprestriction != null">
        membershipRestriction = #{membershiprestriction,jdbcType=INTEGER},
      </if>
      <if test="friendlyurl != null">
        friendlyURL = #{friendlyurl,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=TINYINT},
      </if>
      <if test="remotestaginggroupcount != null">
        remoteStagingGroupCount = #{remotestaginggroupcount,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active_ = #{active,jdbcType=TINYINT},
      </if>
    </set>
    where groupId = #{groupid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.solraccept.solraccept.bean.solr.Group">
    update group_
    set uuid_ = #{uuid,jdbcType=VARCHAR},
      companyId = #{companyid,jdbcType=BIGINT},
      creatorUserId = #{creatoruserid,jdbcType=BIGINT},
      classNameId = #{classnameid,jdbcType=BIGINT},
      classPK = #{classpk,jdbcType=BIGINT},
      parentGroupId = #{parentgroupid,jdbcType=BIGINT},
      liveGroupId = #{livegroupid,jdbcType=BIGINT},
      treePath = #{treepath,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      type_ = #{type,jdbcType=INTEGER},
      typeSettings = #{typesettings,jdbcType=VARCHAR},
      manualMembership = #{manualmembership,jdbcType=TINYINT},
      membershipRestriction = #{membershiprestriction,jdbcType=INTEGER},
      friendlyURL = #{friendlyurl,jdbcType=VARCHAR},
      site = #{site,jdbcType=TINYINT},
      remoteStagingGroupCount = #{remotestaginggroupcount,jdbcType=INTEGER},
      active_ = #{active,jdbcType=TINYINT}
    where groupId = #{groupid,jdbcType=BIGINT}
  </update>
</mapper>